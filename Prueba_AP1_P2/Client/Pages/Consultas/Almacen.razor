@page "/Almacen"
@inject HttpClient httpClient

<div class="card">
    <div class="card">
        <div class="card-header">
            <h3>Almacén de Productos</h3>
        </div>
        <div class="card-body">
            @if (Productos is not null)
            {
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Producto Id</th>
                            <th>Descripción</th>
                            <th>Existencia</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in Productos)
                        {
                            <tr>
                                <td>@producto.ProductoId</td>
                                <td>@producto.Descripcion</td>
                                <td>@producto.Existencia</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-12 col-sm-3">
                <label for="CantidadRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidadRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {
    public List<Productos>? Productos { get; set; }
    public int conteo { get; set; }
    public string? filtro { get; set; }
    public string? Criterio { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }

    public async Task Buscar()
    {
        Productos = await httpClient.GetFromJsonAsync<List<Productos>>($"api/Productos");

        conteo = Productos != null ? Productos!.Count() : 0;
        StateHasChanged();
    }
}
